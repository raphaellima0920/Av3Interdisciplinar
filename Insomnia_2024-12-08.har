{
	"log": {
		"version": "1.2",
		"creator": {
			"name": "Insomnia REST Client",
			"version": "insomnia.desktop.app:v10.2.0"
		},
		"entries": [
			{
				"startedDateTime": "2024-12-09T00:45:19.703Z",
				"time": 162.105,
				"request": {
					"method": "DELETE",
					"url": "http://127.0.0.1:5000/company/4",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "User-Agent",
							"value": "insomnia/10.2.0"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "",
						"text": ""
					},
					"headersSize": -1,
					"bodySize": -1
				},
				"response": {
					"status": 500,
					"statusText": "INTERNAL SERVER ERROR",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.0"
						},
						{
							"name": "Date",
							"value": "Sun, 08 Dec 2024 23:03:06 GMT"
						},
						{
							"name": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"name": "Content-Length",
							"value": "23506"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 23506,
						"mimeType": "text/html; charset=utf-8",
						"text": "<!doctype html>\n<html lang=en>\n  <head>\n    <title>sqlalchemy.orm.exc.UnmappedInstanceError: Class &#39;builtins.NoneType&#39; is not mapped\n // Werkzeug Debugger</title>\n    <link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\">\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script>\n    <script>\n      var CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"kTJGq8vm93H0BIvWCBlJ\";\n    </script>\n  </head>\n  <body style=\"background-color: #fff\">\n    <div class=\"debugger\">\n<h1>sqlalchemy.orm.exc.UnmappedInstanceError</h1>\n<div class=\"detail\">\n  <p class=\"errormsg\">sqlalchemy.orm.exc.UnmappedInstanceError: Class &#39;builtins.NoneType&#39; is not mapped\n</p>\n</div>\n<h2 class=\"traceback\">Traceback <em>(most recent call last)</em></h2>\n<div class=\"traceback\">\n  <h3></h3>\n  <ul><li><div class=\"frame\" id=\"frame-2168980986544\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\"</cite>,\n      line <em class=\"line\">3534</em>,\n      in <code class=\"function\">delete</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">        </span>&#34;&#34;&#34;</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>if self._warn_on_events:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>self._flush_warning(&#34;Session.delete()&#34;)</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>state = attributes.instance_state(instance)\n<span class=\"ws\">            </span>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>except exc.NO_STATE as err:</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>raise exc.UnmappedInstanceError(instance) from err</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>self._delete_impl(state, instance, head=True)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre></div>\n</div>\n\n<li><div class=\"exc-divider\">The above exception was the direct cause of the following exception:</div>\n<li><div class=\"frame\" id=\"frame-2168980984096\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py\"</cite>,\n      line <em class=\"line\">1536</em>,\n      in <code class=\"function\">__call__</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">    </span>) -&gt; cabc.Iterable[bytes]:</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>wrapped to apply middleware.</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&#34;&#34;&#34;</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return self.wsgi_app(environ, start_response)\n<span class=\"ws\">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-2168980984960\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py\"</cite>,\n      line <em class=\"line\">1514</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>except Exception as e:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>error = e</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>response = self.handle_exception(e)\n<span class=\"ws\">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except:  # noqa: B001</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>raise</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>return response(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-2168980985104\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py\"</cite>,\n      line <em class=\"line\">1511</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">        </span>ctx = self.request_context(environ)</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>error: BaseException | None = None</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>response = self.full_dispatch_request()\n<span class=\"ws\">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except Exception as e:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = e</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except:  # noqa: B001</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-2168980985248\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py\"</cite>,\n      line <em class=\"line\">919</em>,\n      in <code class=\"function\">full_dispatch_request</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>except Exception as e:</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>rv = self.handle_user_exception(e)\n<span class=\"ws\">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return self.finalize_request(rv)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def finalize_request(</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>self,</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-2168980985392\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py\"</cite>,\n      line <em class=\"line\">917</em>,\n      in <code class=\"function\">full_dispatch_request</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>rv = self.dispatch_request()\n<span class=\"ws\">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>except Exception as e:</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>rv = self.handle_user_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return self.finalize_request(rv)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def finalize_request(</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-2168980985536\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py\"</cite>,\n      line <em class=\"line\">902</em>,\n      in <code class=\"function\">dispatch_request</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>and req.method == &#34;OPTIONS&#34;</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>):</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>return self.make_default_options_response()</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span># otherwise dispatch to the handler for that endpoint</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n<span class=\"ws\">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def full_dispatch_request(self) -&gt; Response:</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>pre and postprocessing as well as HTTP exception catching and</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>error handling.</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-2168980985680\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\app\\controllers\\company_controller.py\"</cite>,\n      line <em class=\"line\">46</em>,\n      in <code class=\"function\">delete_company</code></h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">            </span>&#34;message&#34;: &#34;Pasta atualizada com sucesso!&#34;,</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>&#34;company&#34;: company.to_dict()</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>})</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def delete_company(self, company_id):</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>company = self.company_repository.delete_company(company_id)\n<span class=\"ws\">        </span>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return jsonify({</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>&#34;message&#34;: &#34;Pasta deletada com sucesso!&#34;,</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>&#34;company&#34;: company.to_dict()</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>})</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-2168980985824\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\app\\repositories\\company_repository.py\"</cite>,\n      line <em class=\"line\">30</em>,\n      in <code class=\"function\">delete_company</code></h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>return company</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def delete_company(self, company_id):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>company = super().get(company_id)</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>super().delete(company)\n<span class=\"ws\">        </span>^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return company</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-2168980985968\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\app\\repositories\\base_repository.py\"</cite>,\n      line <em class=\"line\">19</em>,\n      in <code class=\"function\">delete</code></h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">    </span>def update(self, entity):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>db.session.merge(entity)</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>db.session.commit()</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def delete(self, entity):</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>db.session.delete(entity)\n<span class=\"ws\">        </span>^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>db.session.commit()</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def get_all(self):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return self.model.query.all()</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-2168980986112\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\sqlalchemy\\orm\\scoping.py\"</cite>,\n      line <em class=\"line\">672</em>,\n      in <code class=\"function\">delete</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>:ref:`session_deleting` - at :ref:`session_basics`</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&#34;&#34;&#34;  # noqa: E501</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return self._proxied.delete(instance)\n<span class=\"ws\">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>@overload</pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def execute(</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>self,</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>statement: TypedReturnsRows[_T],</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-2168980986400\">\n  <h4>File <cite class=\"filename\">\"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\"</cite>,\n      line <em class=\"line\">3536</em>,\n      in <code class=\"function\">delete</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>self._flush_warning(&#34;Session.delete()&#34;)</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>state = attributes.instance_state(instance)</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>except exc.NO_STATE as err:</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>raise exc.UnmappedInstanceError(instance) from err\n<span class=\"ws\">            </span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>self._delete_impl(state, instance, head=True)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def _delete_impl(</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>self, state: InstanceState[Any], obj: object, head: bool</pre></div>\n</div>\n</ul>\n  <blockquote>sqlalchemy.orm.exc.UnmappedInstanceError: Class &#39;builtins.NoneType&#39; is not mapped\n</blockquote>\n</div>\n\n<div class=\"plain\">\n    <p>\n      This is the Copy/Paste friendly version of the traceback.\n    </p>\n    <textarea cols=\"50\" rows=\"10\" name=\"code\" readonly>Traceback (most recent call last):\n  File &#34;C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py&#34;, line 3534, in delete\n    state = attributes.instance_state(instance)\nAttributeError: &#39;NoneType&#39; object has no attribute &#39;_sa_instance_state&#39;\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File &#34;C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py&#34;, line 1536, in __call__\n    return self.wsgi_app(environ, start_response)\n           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py&#34;, line 1514, in wsgi_app\n    response = self.handle_exception(e)\n  File &#34;C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py&#34;, line 1511, in wsgi_app\n    response = self.full_dispatch_request()\n  File &#34;C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py&#34;, line 919, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File &#34;C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py&#34;, line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File &#34;C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py&#34;, line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^\n  File &#34;C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\app\\controllers\\company_controller.py&#34;, line 46, in delete_company\n    company = self.company_repository.delete_company(company_id)\n  File &#34;C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\app\\repositories\\company_repository.py&#34;, line 30, in delete_company\n    super().delete(company)\n    ~~~~~~~~~~~~~~^^^^^^^^^\n  File &#34;C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\app\\repositories\\base_repository.py&#34;, line 19, in delete\n    db.session.delete(entity)\n    ~~~~~~~~~~~~~~~~~^^^^^^^^\n  File &#34;C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\sqlalchemy\\orm\\scoping.py&#34;, line 672, in delete\n    return self._proxied.delete(instance)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File &#34;C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py&#34;, line 3536, in delete\n    raise exc.UnmappedInstanceError(instance) from err\nsqlalchemy.orm.exc.UnmappedInstanceError: Class &#39;builtins.NoneType&#39; is not mapped\n</textarea>\n</div>\n<div class=\"explanation\">\n  The debugger caught an exception in your WSGI application.  You can now\n  look at the traceback which led to the error.  <span class=\"nojavascript\">\n  If you enable JavaScript you can also use additional features such as code\n  execution (if the evalex feature is enabled), automatic pasting of the\n  exceptions and much more.</span>\n</div>\n      <div class=\"footer\">\n        Brought to you by <strong class=\"arthur\">DON'T PANIC</strong>, your\n        friendly Werkzeug powered traceback interpreter.\n      </div>\n    </div>\n\n    <div class=\"pin-prompt\">\n      <div class=\"inner\">\n        <h3>Console Locked</h3>\n        <p>\n          The console is locked and needs to be unlocked by entering the PIN.\n          You can find the PIN printed out on the standard output of your\n          shell that runs the server.\n        <form>\n          <p>PIN:\n            <input type=text name=pin size=14>\n            <input type=submit name=btn value=\"Confirm Pin\">\n        </form>\n      </div>\n    </div>\n  </body>\n</html>\n\n<!--\n\nTraceback (most recent call last):\n  File \"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 3534, in delete\n    state = attributes.instance_state(instance)\nAttributeError: 'NoneType' object has no attribute '_sa_instance_state'\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py\", line 1536, in __call__\n    return self.wsgi_app(environ, start_response)\n           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py\", line 1514, in wsgi_app\n    response = self.handle_exception(e)\n  File \"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py\", line 1511, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py\", line 919, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py\", line 917, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\flask\\app.py\", line 902, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^\n  File \"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\app\\controllers\\company_controller.py\", line 46, in delete_company\n    company = self.company_repository.delete_company(company_id)\n  File \"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\app\\repositories\\company_repository.py\", line 30, in delete_company\n    super().delete(company)\n    ~~~~~~~~~~~~~~^^^^^^^^^\n  File \"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\app\\repositories\\base_repository.py\", line 19, in delete\n    db.session.delete(entity)\n    ~~~~~~~~~~~~~~~~~^^^^^^^^\n  File \"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\sqlalchemy\\orm\\scoping.py\", line 672, in delete\n    return self._proxied.delete(instance)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\Documentos\\Downloads\\av3se2-main\\backend\\venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 3536, in delete\n    raise exc.UnmappedInstanceError(instance) from err\nsqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped\n\n\n-->\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 162.105,
					"receive": 0,
					"ssl": -1
				},
				"comment": "Excluir"
			},
			{
				"startedDateTime": "2024-12-09T00:45:19.703Z",
				"time": 96.91199999999999,
				"request": {
					"method": "DELETE",
					"url": "http://127.0.0.1:5000/user/3",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "User-Agent",
							"value": "insomnia/10.2.0"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "",
						"text": ""
					},
					"headersSize": -1,
					"bodySize": -1
				},
				"response": {
					"status": 201,
					"statusText": "CREATED",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.0"
						},
						{
							"name": "Date",
							"value": "Sun, 08 Dec 2024 22:31:08 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "232"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 232,
						"mimeType": "application/json",
						"text": "{\n  \"message\": \"Usu\\u00e1rio deletado com sucesso!\",\n  \"user\": {\n    \"active\": true,\n    \"company_id\": 3,\n    \"created_at\": \"Sun, 08 Dec 2024 19:29:53 GMT\",\n    \"email\": \"Raphael@gmail.com\",\n    \"id\": 3,\n    \"name\": \"raphael\"\n  }\n}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 96.91199999999999,
					"receive": 0,
					"ssl": -1
				},
				"comment": "Excluir"
			},
			{
				"startedDateTime": "2024-12-09T00:45:19.703Z",
				"time": 72.78800000000001,
				"request": {
					"method": "DELETE",
					"url": "http://127.0.0.1:5000/residue/1",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "User-Agent",
							"value": "insomnia/10.2.0"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "",
						"text": ""
					},
					"headersSize": -1,
					"bodySize": -1
				},
				"response": {
					"status": 200,
					"statusText": "OK",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.0"
						},
						{
							"name": "Date",
							"value": "Sun, 08 Dec 2024 23:05:45 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "270"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 270,
						"mimeType": "application/json",
						"text": "{\n  \"message\": \"Residuo deletado com sucesso!\",\n  \"residue\": {\n    \"capacity\": 10,\n    \"company_id\": 1,\n    \"created_at\": \"Sun, 08 Dec 2024 20:05:10 GMT\",\n    \"current_total\": 5,\n    \"id\": 1,\n    \"item\": \"Residuo de Esgoto\",\n    \"type\": \"Esgoto\",\n    \"user_id\": 1\n  }\n}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 72.78800000000001,
					"receive": 0,
					"ssl": -1
				},
				"comment": "Excluir"
			},
			{
				"startedDateTime": "2024-12-09T00:45:19.703Z",
				"time": 79.61200000000001,
				"request": {
					"method": "PUT",
					"url": "http://127.0.0.1:5000/company/2",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "User-Agent",
							"value": "insomnia/10.2.0"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "application/json",
						"text": "{\n\t\"name\": \"SucelsoIP\"\n}"
					},
					"headersSize": -1,
					"bodySize": -1
				},
				"response": {
					"status": 200,
					"statusText": "OK",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.0"
						},
						{
							"name": "Date",
							"value": "Sun, 08 Dec 2024 22:24:42 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "177"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 177,
						"mimeType": "application/json",
						"text": "{\n  \"company\": {\n    \"active\": true,\n    \"created_at\": \"Sun, 08 Dec 2024 19:23:19 GMT\",\n    \"id\": 2,\n    \"name\": \"SucelsoIP\"\n  },\n  \"message\": \"Pasta atualizada com sucesso!\"\n}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 79.61200000000001,
					"receive": 0,
					"ssl": -1
				},
				"comment": "Atualizar"
			},
			{
				"startedDateTime": "2024-12-09T00:45:19.703Z",
				"time": 47.239000000000004,
				"request": {
					"method": "PUT",
					"url": "http://127.0.0.1:5000/user/2",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "User-Agent",
							"value": "insomnia/10.2.0"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "application/json",
						"text": "{\n\t\"name\": \"Daniel De Paula\"\n}"
					},
					"headersSize": -1,
					"bodySize": -1
				},
				"response": {
					"status": 201,
					"statusText": "CREATED",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.0"
						},
						{
							"name": "Date",
							"value": "Sun, 08 Dec 2024 23:04:41 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "241"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 241,
						"mimeType": "application/json",
						"text": "{\n  \"message\": \"Usu\\u00e1rio atualizado com sucesso!\",\n  \"user\": {\n    \"active\": true,\n    \"company_id\": 1,\n    \"created_at\": \"Sun, 08 Dec 2024 20:03:44 GMT\",\n    \"email\": \"daniel@gmail.com\",\n    \"id\": 2,\n    \"name\": \"Daniel De Paula\"\n  }\n}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 47.239000000000004,
					"receive": 0,
					"ssl": -1
				},
				"comment": "Atualizar"
			},
			{
				"startedDateTime": "2024-12-09T00:45:19.703Z",
				"time": 67.094,
				"request": {
					"method": "PUT",
					"url": "http://127.0.0.1:5000/residue/2",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "User-Agent",
							"value": "insomnia/10.2.0"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "application/json",
						"text": "{\n\t\"item\": \"Compostos toxicos\"\n}"
					},
					"headersSize": -1,
					"bodySize": -1
				},
				"response": {
					"status": 200,
					"statusText": "OK",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.0"
						},
						{
							"name": "Date",
							"value": "Sun, 08 Dec 2024 22:33:21 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "272"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 272,
						"mimeType": "application/json",
						"text": "{\n  \"message\": \"Residuo atualizado com sucesso!\",\n  \"residue\": {\n    \"capacity\": 10,\n    \"company_id\": 1,\n    \"created_at\": \"Sun, 08 Dec 2024 19:32:26 GMT\",\n    \"current_total\": 5,\n    \"id\": 2,\n    \"item\": \"Compostos toxicos\",\n    \"type\": \"Esgoto\",\n    \"user_id\": 1\n  }\n}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 67.094,
					"receive": 0,
					"ssl": -1
				},
				"comment": "Atualizar"
			},
			{
				"startedDateTime": "2024-12-09T00:45:19.703Z",
				"time": 411.267,
				"request": {
					"method": "GET",
					"url": "http://127.0.0.1:5000/company/3",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "User-Agent",
							"value": "insomnia/10.2.0"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "",
						"text": ""
					},
					"headersSize": -1,
					"bodySize": -1
				},
				"response": {
					"status": 200,
					"statusText": "OK",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.0"
						},
						{
							"name": "Date",
							"value": "Sun, 08 Dec 2024 23:02:35 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "177"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 177,
						"mimeType": "application/json",
						"text": "{\n  \"company\": {\n    \"active\": true,\n    \"created_at\": \"Sun, 08 Dec 2024 20:02:02 GMT\",\n    \"id\": 3,\n    \"name\": \"RaphaelIP\"\n  },\n  \"message\": \"Pasta encontrada com sucesso!\"\n}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 411.267,
					"receive": 0,
					"ssl": -1
				},
				"comment": "Encontrar por ID"
			},
			{
				"startedDateTime": "2024-12-09T00:45:19.703Z",
				"time": 141.87800000000001,
				"request": {
					"method": "GET",
					"url": "http://127.0.0.1:5000/user/3",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "User-Agent",
							"value": "insomnia/10.2.0"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "",
						"text": ""
					},
					"headersSize": -1,
					"bodySize": -1
				},
				"response": {
					"status": 201,
					"statusText": "CREATED",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.0"
						},
						{
							"name": "Date",
							"value": "Sun, 08 Dec 2024 22:30:32 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "234"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 234,
						"mimeType": "application/json",
						"text": "{\n  \"message\": \"Usu\\u00e1rio encontrado com sucesso!\",\n  \"user\": {\n    \"active\": true,\n    \"company_id\": 3,\n    \"created_at\": \"Sun, 08 Dec 2024 19:29:53 GMT\",\n    \"email\": \"Raphael@gmail.com\",\n    \"id\": 3,\n    \"name\": \"raphael\"\n  }\n}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 141.87800000000001,
					"receive": 0,
					"ssl": -1
				},
				"comment": "Encontrar por ID"
			},
			{
				"startedDateTime": "2024-12-09T00:45:19.703Z",
				"time": 82.39399999999999,
				"request": {
					"method": "GET",
					"url": "http://127.0.0.1:5000/residue/1",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "User-Agent",
							"value": "insomnia/10.2.0"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "",
						"text": ""
					},
					"headersSize": -1,
					"bodySize": -1
				},
				"response": {
					"status": 200,
					"statusText": "OK",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.0"
						},
						{
							"name": "Date",
							"value": "Sun, 08 Dec 2024 23:05:27 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "272"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 272,
						"mimeType": "application/json",
						"text": "{\n  \"message\": \"Residuo encontrado com sucesso!\",\n  \"residue\": {\n    \"capacity\": 10,\n    \"company_id\": 1,\n    \"created_at\": \"Sun, 08 Dec 2024 20:05:10 GMT\",\n    \"current_total\": 5,\n    \"id\": 1,\n    \"item\": \"Residuo de Esgoto\",\n    \"type\": \"Esgoto\",\n    \"user_id\": 1\n  }\n}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 82.39399999999999,
					"receive": 0,
					"ssl": -1
				},
				"comment": "Encontrar por ID"
			},
			{
				"startedDateTime": "2024-12-09T00:45:19.703Z",
				"time": 285.763,
				"request": {
					"method": "GET",
					"url": "http://127.0.0.1:5000/company",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "User-Agent",
							"value": "insomnia/10.2.0"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "",
						"text": ""
					},
					"headersSize": -1,
					"bodySize": -1
				},
				"response": {
					"status": 200,
					"statusText": "OK",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.0"
						},
						{
							"name": "Date",
							"value": "Sun, 08 Dec 2024 23:02:18 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "584"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 584,
						"mimeType": "application/json",
						"text": "{\n  \"companies\": [\n    {\n      \"active\": true,\n      \"created_at\": \"Sun, 08 Dec 2024 20:01:34 GMT\",\n      \"id\": 1,\n      \"name\": \"LucasIP\"\n    },\n    {\n      \"active\": true,\n      \"created_at\": \"Sun, 08 Dec 2024 20:01:53 GMT\",\n      \"id\": 2,\n      \"name\": \"SheilaIP\"\n    },\n    {\n      \"active\": true,\n      \"created_at\": \"Sun, 08 Dec 2024 20:02:02 GMT\",\n      \"id\": 3,\n      \"name\": \"RaphaelIP\"\n    },\n    {\n      \"active\": true,\n      \"created_at\": \"Sun, 08 Dec 2024 20:02:10 GMT\",\n      \"id\": 4,\n      \"name\": \"DanielIP\"\n    }\n  ],\n  \"message\": \"Pastas encontradas com sucesso!\"\n}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 285.763,
					"receive": 0,
					"ssl": -1
				},
				"comment": "Encontrar Tudo"
			},
			{
				"startedDateTime": "2024-12-09T00:45:19.703Z",
				"time": 180.255,
				"request": {
					"method": "GET",
					"url": "http://127.0.0.1:5000/user",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "User-Agent",
							"value": "insomnia/10.2.0"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "",
						"text": ""
					},
					"headersSize": -1,
					"bodySize": -1
				},
				"response": {
					"status": 201,
					"statusText": "CREATED",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.0"
						},
						{
							"name": "Date",
							"value": "Sun, 08 Dec 2024 22:30:21 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "451"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 451,
						"mimeType": "application/json",
						"text": "{\n  \"message\": \"Usu\\u00e1rios encontrados com sucesso!\",\n  \"users\": [\n    {\n      \"active\": true,\n      \"company_id\": 1,\n      \"created_at\": \"Sun, 08 Dec 2024 19:28:52 GMT\",\n      \"email\": \"Danieldepala@gmail.com\",\n      \"id\": 1,\n      \"name\": \"Daniel\"\n    },\n    {\n      \"active\": true,\n      \"company_id\": 3,\n      \"created_at\": \"Sun, 08 Dec 2024 19:29:53 GMT\",\n      \"email\": \"Raphael@gmail.com\",\n      \"id\": 3,\n      \"name\": \"raphael\"\n    }\n  ]\n}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 180.255,
					"receive": 0,
					"ssl": -1
				},
				"comment": "Encontrar Tudo"
			},
			{
				"startedDateTime": "2024-12-09T00:45:19.703Z",
				"time": 206.821,
				"request": {
					"method": "GET",
					"url": "http://127.0.0.1:5000/residue",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "User-Agent",
							"value": "insomnia/10.2.0"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "",
						"text": ""
					},
					"headersSize": -1,
					"bodySize": -1
				},
				"response": {
					"status": 200,
					"statusText": "OK",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.0"
						},
						{
							"name": "Date",
							"value": "Sun, 08 Dec 2024 23:05:15 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "303"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 303,
						"mimeType": "application/json",
						"text": "{\n  \"message\": \"Residuos encontrados com sucesso!\",\n  \"residues\": [\n    {\n      \"capacity\": 10,\n      \"company_id\": 1,\n      \"created_at\": \"Sun, 08 Dec 2024 20:05:10 GMT\",\n      \"current_total\": 5,\n      \"id\": 1,\n      \"item\": \"Residuo de Esgoto\",\n      \"type\": \"Esgoto\",\n      \"user_id\": 1\n    }\n  ]\n}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 206.821,
					"receive": 0,
					"ssl": -1
				},
				"comment": "Encontrar Tudo"
			},
			{
				"startedDateTime": "2024-12-09T00:45:19.703Z",
				"time": 40.7,
				"request": {
					"method": "POST",
					"url": "http://127.0.0.1:5000/company",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "User-Agent",
							"value": "insomnia/10.2.0"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "application/json",
						"text": "{\n\t\"name\": \"DanielIP\"\n}"
					},
					"headersSize": -1,
					"bodySize": -1
				},
				"response": {
					"status": 201,
					"statusText": "CREATED",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.0"
						},
						{
							"name": "Date",
							"value": "Sun, 08 Dec 2024 23:02:10 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "172"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 172,
						"mimeType": "application/json",
						"text": "{\n  \"company\": {\n    \"active\": true,\n    \"created_at\": \"Sun, 08 Dec 2024 20:02:10 GMT\",\n    \"id\": 4,\n    \"name\": \"DanielIP\"\n  },\n  \"message\": \"Pasta criada com sucesso!\"\n}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 40.7,
					"receive": 0,
					"ssl": -1
				},
				"comment": "Criar"
			},
			{
				"startedDateTime": "2024-12-09T00:45:19.703Z",
				"time": 51.818000000000005,
				"request": {
					"method": "POST",
					"url": "http://127.0.0.1:5000/user",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "User-Agent",
							"value": "insomnia/10.2.0"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "application/json",
						"text": "{\n\t\"name\": \"lucas\",\n\t\"email\": \"lucasl@gmail.com\",\n\t\"password\": \"4321\",\n\t\"company_id\": \"1\"\n}"
					},
					"headersSize": -1,
					"bodySize": -1
				},
				"response": {
					"status": 201,
					"statusText": "CREATED",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.0"
						},
						{
							"name": "Date",
							"value": "Sun, 08 Dec 2024 23:04:03 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "227"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 227,
						"mimeType": "application/json",
						"text": "{\n  \"message\": \"Usu\\u00e1rio criado com sucesso!\",\n  \"user\": {\n    \"active\": true,\n    \"company_id\": 1,\n    \"created_at\": \"Sun, 08 Dec 2024 20:04:03 GMT\",\n    \"email\": \"lucasl@gmail.com\",\n    \"id\": 3,\n    \"name\": \"lucas\"\n  }\n}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 51.818000000000005,
					"receive": 0,
					"ssl": -1
				},
				"comment": "Criar"
			},
			{
				"startedDateTime": "2024-12-09T00:45:19.703Z",
				"time": 82.088,
				"request": {
					"method": "POST",
					"url": "http://127.0.0.1:5000/residue",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "User-Agent",
							"value": "insomnia/10.2.0"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "application/json",
						"text": "{\n\t\"item\": \"Residuo de Esgoto\",\n\t\"type\": \"Esgoto\",\n\t\"capacity\": 10,\n\t\"current_total\": 5,\n\t\"user_id\": 1,\n\t\"company_id\": 1\n}"
					},
					"headersSize": -1,
					"bodySize": -1
				},
				"response": {
					"status": 201,
					"statusText": "CREATED",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.0"
						},
						{
							"name": "Date",
							"value": "Sun, 08 Dec 2024 23:05:10 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "268"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 268,
						"mimeType": "application/json",
						"text": "{\n  \"message\": \"Residuo criado com sucesso!\",\n  \"residue\": {\n    \"capacity\": 10,\n    \"company_id\": 1,\n    \"created_at\": \"Sun, 08 Dec 2024 20:05:10 GMT\",\n    \"current_total\": 5,\n    \"id\": 1,\n    \"item\": \"Residuo de Esgoto\",\n    \"type\": \"Esgoto\",\n    \"user_id\": 1\n  }\n}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 82.088,
					"receive": 0,
					"ssl": -1
				},
				"comment": "Criar"
			}
		]
	}
}